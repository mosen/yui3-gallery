<div class="highlight"><pre><span class="cm">/* dp-table selection plugin</span>
<span class="cm"> * </span>
<span class="cm"> * allows for selection of rows.</span>
<span class="cm"> */</span>
<span class="kd">var</span>	<span class="nx">Lang</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Lang</span><span class="p">,</span>
        <span class="nx">Node</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Node</span><span class="p">;</span>

<span class="nx">Y</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s1">&#39;DP&#39;</span><span class="p">).</span><span class="nx">SelectionPlugin</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Base</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="s1">&#39;dp-table-selection-plugin&#39;</span><span class="p">,</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Plugin</span><span class="p">.</span><span class="nx">Base</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span>
  
    <span class="cm">/*</span>
<span class="cm">     * @property _host Object Host Instance</span>
<span class="cm">     */</span>
    <span class="nx">_host</span> <span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
  
    <span class="nx">initializer</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;initializer&#39;</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="s1">&#39;dp-table-selection-plugin&#39;</span><span class="p">);</span>
        
        <span class="k">this</span><span class="p">.</span><span class="nx">_host</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;host&#39;</span><span class="p">);</span>
        
        <span class="c1">// Row selection</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;rowSelect&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">defaultFn</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_defRowSelectFn</span><span class="p">});</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;rowOver&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">defaultFn</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetRowHoverStyle</span><span class="p">});</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;rowOut&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">defaultFn</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_uiRemoveRowHoverStyle</span><span class="p">});</span>
        
        <span class="k">this</span><span class="p">.</span><span class="nx">_bindMouseEvents</span><span class="p">();</span>
        
        <span class="k">this</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="s1">&#39;rowSelectionChange&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetRowSelection</span><span class="p">);</span>
    <span class="p">},</span>
    
    <span class="nx">destructor</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        
    <span class="p">},</span>
    
    <span class="nx">_bindMouseEvents</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                                                
        <span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">_tbodyNode</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s1">&#39;rowSelect&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">rowTarget</span><span class="o">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">});</span>
        <span class="p">},</span> <span class="s1">&#39;tr&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">_tbodyNode</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="s1">&#39;mouseenter&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s1">&#39;rowOver&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">rowTarget</span><span class="o">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">});</span>
        <span class="p">},</span> <span class="s1">&#39;tr&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">_tbodyNode</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="s1">&#39;mouseleave&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s1">&#39;rowOut&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">rowTarget</span><span class="o">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">});</span>
        <span class="p">},</span> <span class="s1">&#39;tr&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
    <span class="p">},</span>
    
    <span class="cm">/**</span>
<span class="cm">     * Default handler for &quot;rowSelect&quot; event.</span>
<span class="cm">     * TODO: afterSelectionChange implementation of this.</span>
<span class="cm">     * </span>
<span class="cm">     * @method _defRowSelectFn</span>
<span class="cm">     * @param e {Event}</span>
<span class="cm">     */</span>
    <span class="nx">_defRowSelectFn</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>

            <span class="kd">var</span> <span class="nx">selection</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;rowSelection&#39;</span><span class="p">),</span>
                    <span class="nx">newSelection</span><span class="p">,</span>
                    <span class="nx">inverted</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>

            <span class="nx">newSelection</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nb">Array</span><span class="p">(</span><span class="nx">selection</span><span class="p">);</span>

            <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">newSelection</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="nx">newSelection</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">)</span> <span class="p">{</span>
                            <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Invert selection&#39;</span><span class="p">);</span>
                            <span class="nx">newSelection</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
                            <span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;row&#39;</span><span class="p">,</span> <span class="s1">&#39;selected&#39;</span><span class="p">));</span>
                            <span class="nx">inverted</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
                    <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="nx">inverted</span> <span class="o">===</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;add selection&#39;</span><span class="p">);</span>
                    <span class="nx">newSelection</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">);</span>
                    <span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;row&#39;</span><span class="p">,</span> <span class="s1">&#39;selected&#39;</span><span class="p">));</span>
            <span class="p">}</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;rowSelection&#39;</span><span class="p">,</span> <span class="nx">newSelection</span><span class="p">);</span>
    <span class="p">},</span>

    <span class="cm">/**</span>
<span class="cm">     * Set the row selection based on the selection attribute.</span>
<span class="cm">     * </span>
<span class="cm">     * TODO: this algorithm needs brain surgery.</span>
<span class="cm">     * </span>
<span class="cm">     * The Y.Widget lifecycle doesn&#39;t seem to make sense in the case of row selection because we need to save the selected row nodes, then</span>
<span class="cm">     * enumerate them for new selections, then add the classes sequentially.</span>
<span class="cm">     * </span>
<span class="cm">     * So the uiSetXXXX convention does not apply here.</span>
<span class="cm">     * </span>
<span class="cm">     * @method _uiSetRowSelection</span>
<span class="cm">     * @protected</span>
<span class="cm">     */</span>
    <span class="nx">_uiSetRowSelection</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;_defRowSelectFn&#39;</span><span class="p">);</span>

            <span class="c1">// Profiled 2.288 ms to remove all classes and add again</span>
            <span class="c1">// Profiled 0.400 ms to calculate array difference and act upon them.</span>
            <span class="c1">// Profiled 0.700 ms to do class change on DOM event.</span>

    <span class="p">},</span>

    <span class="cm">/**</span>
<span class="cm">     * Remove the hover style from a row.</span>
<span class="cm">     * </span>
<span class="cm">     * @param e {Event}</span>
<span class="cm">     * @returns</span>
<span class="cm">     */</span>
    <span class="nx">_uiRemoveRowHoverStyle</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">//Y.log(&#39;SelectionPlugin:_uiRemoveRowHoverStyle&#39;);</span>
            <span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;row&#39;</span><span class="p">,</span> <span class="s1">&#39;over&#39;</span><span class="p">));</span>		
    <span class="p">},</span>

    <span class="cm">/**</span>
<span class="cm">     * Add the hover style to a row.</span>
<span class="cm">     * </span>
<span class="cm">     * @param e {Event}</span>
<span class="cm">     * @returns</span>
<span class="cm">     */</span>
    <span class="nx">_uiSetRowHoverStyle</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">//Y.log(&#39;SelectionPlugin:_uiSetRowHoverStyle&#39;);</span>
            <span class="nx">e</span><span class="p">.</span><span class="nx">rowTarget</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_host</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;row&#39;</span><span class="p">,</span> <span class="s1">&#39;over&#39;</span><span class="p">));</span>
    <span class="p">}</span>    
<span class="p">},</span> <span class="p">{</span>
    <span class="nx">NAME</span> <span class="o">:</span> <span class="s2">&quot;selectionPlugin&quot;</span><span class="p">,</span>
    <span class="nx">NS</span> <span class="o">:</span> <span class="s2">&quot;selection&quot;</span><span class="p">,</span>

    <span class="nx">ATTRS</span> <span class="o">:</span> <span class="p">{</span>

        <span class="cm">/*</span>
<span class="cm">         * Collection of selected rows.</span>
<span class="cm">         * </span>
<span class="cm">         * @attribute rowSelection</span>
<span class="cm">         * @default empty array</span>
<span class="cm">         * @type Array</span>
<span class="cm">         */</span>
        <span class="nx">rowSelection</span> <span class="o">:</span> <span class="p">{</span>
                    <span class="nx">value</span><span class="o">:</span> <span class="nb">Array</span><span class="p">(),</span>
                    <span class="nx">validator</span><span class="o">:</span> <span class="nx">Lang</span><span class="p">.</span><span class="nx">isArray</span>
        <span class="p">}</span>
    <span class="p">}</span>   
<span class="p">});</span>
</pre></div>
