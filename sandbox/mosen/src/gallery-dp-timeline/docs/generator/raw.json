{"majorversion": 3, "classmap": {"DP.Timeline": {"name": "DP.Timeline", "configs": {"tplDay": {"type": "String", "description": "Box containing label for day of the week", "guessedname": "tplDay", "guessedtype": "property"}, "childPrototype": {"type": "Object", "description": "Prototype object for child objects", "guessedname": "childPrototype", "guessedtype": "property"}, "gutter": {"type": "Number", "description": "Size of the gutter in pixels that lies between each slot", "guessedname": "gutter", "guessedtype": "property"}, "endDate": {"type": "Date", "description": "The last date shown in the timeline", "guessedname": "endDate", "guessedtype": "property"}, "tplBackgroundContainer": {"type": "String", "description": "Template for the background container which defines background style and holds highlighted days", "guessedname": "tplBackgroundContainer", "guessedtype": "property"}, "defaultChildType": {"description": "Default child class to use", "private": "", "readonly": "", "guessedname": "defaultChildType", "guessedtype": "property", "type": "String"}, "date": {"type": "Date", "description": "Starting date of the timeline", "guessedname": "date", "guessedtype": "property"}, "length": {"type": "Number", "description": "length of the timeline in days", "guessedname": "length", "guessedtype": "property"}, "tplDayContainer": {"type": "String", "description": "Container for days of the week labels", "guessedname": "tplDayContainer", "guessedtype": "property"}, "eventHeight": {"type": "Number", "description": "Height of each event", "guessedname": "eventHeight", "guessedtype": "property"}, "slots": {"type": "Array", "description": "Hold the leftmost pixel of the rightmost event per slot to determine free slots", "guessedname": "slots", "guessedtype": "property"}, "tplBackgroundHighlight": {"type": "String", "description": "Template for background highlights, used for weekends", "guessedname": "tplBackgroundHighlight", "guessedtype": "property"}, "tplEventContainer": {"type": "String", "description": "Container for events that may span days", "guessedname": "tplEventContainer", "guessedtype": "property"}, "dayWidth": {"type": "Number", "description": "Width of each day label", "guessedname": "dayWidth", "guessedtype": "property"}}, "constructors": [{"description": "Y.Widget Lifecycle: Initializer"}], "namespace": "", "module": "gallery-dp-timeline", "events": {"defaultChildTypeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "defaultChildTypeChange", "description": "Fires when the value for the configuration attribute 'defaultChildType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "endDateChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "endDateChange", "description": "Fires when the value for the configuration attribute 'endDate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "gutterChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "gutterChange", "description": "Fires when the value for the configuration attribute 'gutter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "tplEventContainerChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "tplEventContainerChange", "description": "Fires when the value for the configuration attribute 'tplEventContainer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "dayWidthChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "dayWidthChange", "description": "Fires when the value for the configuration attribute 'dayWidth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "slotsChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "slotsChange", "description": "Fires when the value for the configuration attribute 'slots' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "childPrototypeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "childPrototypeChange", "description": "Fires when the value for the configuration attribute 'childPrototype' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "tplBackgroundHighlightChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "tplBackgroundHighlightChange", "description": "Fires when the value for the configuration attribute 'tplBackgroundHighlight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "tplBackgroundContainerChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "tplBackgroundContainerChange", "description": "Fires when the value for the configuration attribute 'tplBackgroundContainer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "tplDayContainerChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "tplDayContainerChange", "description": "Fires when the value for the configuration attribute 'tplDayContainer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "dateChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "dateChange", "description": "Fires when the value for the configuration attribute 'date' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "lengthChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "lengthChange", "description": "Fires when the value for the configuration attribute 'length' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "eventHeightChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "eventHeightChange", "description": "Fires when the value for the configuration attribute 'eventHeight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "tplDayChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "tplDayChange", "description": "Fires when the value for the configuration attribute 'tplDay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}}, "guessedname": "Timeline", "methods": {"getEndDate": {"public": "", "return": {"type": "", "description": "Date Ending date for the timeline"}, "description": "Get the last date that should be shown on the timeline", "guessedname": "getEndDate", "guessedtype": "function"}, "onEventMouseLeave": {"private": "", "description": "Handle mouse leaving an event", "guessedname": "onEventMouseLeave", "guessedtype": "function"}, "_renderHeadings": {"guessedname": "_renderHeadings", "return": {"type": "", "description": "Y.Node Heading Container"}, "description": "Render the containers for the headings", "private": "", "guessedtype": "function"}, "_afterChildrenChange": {"private": "", "description": "Handle a change in child objects, from WidgetParent", "guessedname": "_afterChildrenChange", "guessedtype": "function"}, "onEventMouseDblClick": {"private": "", "description": "Handle mouse doubleclick on background", "guessedname": "onEventMouseDblClick", "guessedtype": "function"}, "initializer": {"protected": "", "params": [{"type": "Object", "name": "config", "description": "  Configuration object"}], "description": "Y.Widget Lifecycle: Initializer", "guessedname": "initializer", "guessedtype": "function"}, "onEventKeyDelete": {"guessedname": "onEventKeyDelete", "params": [{"type": "Event", "name": "e", "description": "  Event facade"}], "description": "Delete selected event when a delete/backspace key is pressed", "private": "", "guessedtype": "function"}, "afterDateChange": {"private": "", "description": "Handle date change, update UI", "guessedname": "afterDateChange", "guessedtype": "function"}, "_getChildFreeSlot": {"private": "", "description": "Get the first available slot if this event overlaps, WidgetChild version", "guessedname": "_getChildFreeSlot", "guessedtype": "function"}, "dateToOffset": {"guessedname": "dateToOffset", "params": [{"type": "Date", "name": "d", "description": "  Date which will be compared to our date attribute"}], "description": "Convert the supplied date into an x offset", "private": "", "guessedtype": "function"}, "destructor": {"protected": "", "description": "Destructor lifecycle implementation", "guessedname": "destructor", "guessedtype": "function"}, "bindUI": {"protected": "", "description": "Bind events to the ui", "guessedname": "bindUI", "guessedtype": "function"}, "afterSelectionChange": {"private": "", "description": "Handle selection change, update UI", "guessedname": "afterSelectionChange", "guessedtype": "function"}, "_renderBackgroundHighlights": {"guessedname": "_renderBackgroundHighlights", "params": [{"type": "Node", "name": "parent", "description": "  Parent node to render into"}], "description": "Render highlight objects on the background which indicate holidays.", "private": "", "guessedtype": "function"}, "reflowEvents": {"description": "Re-flow events so that they are stacked where possible", "public": "", "guessedname": "reflowEvents", "guessedtype": "function"}, "slotToOffset": {"guessedname": "slotToOffset", "params": [{"type": "Number", "name": "slot", "description": "  Slot number"}], "description": "Convert the supplied slot number into a y offset", "private": "", "guessedtype": "function"}, "_renderHeadingsDays": {"guessedname": "_renderHeadingsDays", "params": [{"type": "Node", "name": "parent", "description": "  Parent to render into"}], "description": "Render all of the day labels", "private": "", "guessedtype": "function"}, "isDatePublicHoliday": {"return": {"type": "", "description": "boolean True if date is a public holiday"}, "description": "Determine if the given date is a public holiday or not", "private": "", "params": [{"type": "Date", "name": "d", "description": "  Date to examine"}], "guessedname": "isDatePublicHoliday", "guessedtype": "function", "todo": "Support alternate datasource for public holidays in addition to fixed holidays"}, "removeSelected": {"private": "", "description": "Remove the currently selected item (if any)", "guessedname": "removeSelected", "guessedtype": "function"}, "onBackgroundHover": {"guessedname": "onBackgroundHover", "params": [{"type": "Event", "name": "e", "description": "  Event facade"}], "description": "Mouse hover over the background container displays highlight at nearest date,\nindicating that the user may add something on that date.", "private": "", "guessedtype": "function"}, "syncUI": {"description": "Synchronizes the DOM state with the attribute settings", "guessedname": "syncUI", "guessedtype": "function"}, "_renderEventContainer": {"guessedname": "_renderEventContainer", "return": {"type": "", "description": "Node Event container, holding child events"}, "description": "Render the container that will hold events", "private": "", "guessedtype": "function"}, "onEventMouseEnter": {"private": "", "description": "Handle mouse entering an event", "guessedname": "onEventMouseEnter", "guessedtype": "function"}, "onEventMouseClick": {"guessedname": "onEventMouseClick", "params": [{"type": "Event", "name": "e", "description": "  Event facade"}], "description": "Handle mouse click on a child event, causing it to be selected", "private": "", "guessedtype": "function"}, "_renderBackgroundContainer": {"guessedname": "_renderBackgroundContainer", "return": {"type": "", "description": "Node Container for background (timeline static) objects"}, "description": "Render the background objects", "private": "", "guessedtype": "function"}, "getEventWidth": {"guessedname": "getEventWidth", "params": [{"type": "Y.DP.TimelineEvent", "name": "e", "description": "  Event child object"}], "description": "Get the calculated width of an event object", "private": "", "guessedtype": "function"}, "renderUI": {"protected": "", "description": "Create the DOM structure.", "guessedname": "renderUI", "guessedtype": "function"}}, "extends": "Widget", "superclass": "Widget", "file": "dp-timeline.js", "guessedtype": "property", "shortname": "DP.Timeline", "properties": {"_dates": {"private": "", "description": "Array containing information about dates shown", "guessedname": "_dates", "guessedtype": "property"}}, "description": "The timeline module produces a graphical representation of a timeline with events marked on the timeline,\nSimilar to a gantt-chart but more generic."}, "DP.TimelineUtil": {"description": "Utility methods used to calculate dates and times for timeline", "namespace": "", "module": "gallery-dp-timeline", "guessedname": "TimelineUtil", "methods": {"zeroTime": {"return": {"type": "", "description": "Date date with time cleared"}, "description": "Clear the time from a date", "params": [{"type": "Date", "name": "d", "description": "  Date to set time back to 00:00"}], "guessedname": "zeroTime", "guessedtype": "function", "public": ""}, "rangeToDuration": {"return": {"type": "", "description": "Number Duration in days, may be negative"}, "description": "Convert a range (2 dates) into a duration. Negative durations are possible. Finish date inclusive", "static": "", "guessedname": "rangeToDuration", "guessedtype": "function", "params": [{"type": "Date", "name": "start", "description": "  Starting date"}, {"type": "Date", "name": "finish", "description": "  Finishing date"}], "public": ""}, "rangeToDifference": {"return": {"type": "", "description": "Number Duration in days, may be negative"}, "description": "Convert a range (2 dates) into a duration. Negative durations are possible. Finish date not inclusive", "static": "", "guessedname": "rangeToDifference", "guessedtype": "function", "params": [{"type": "Date", "name": "start", "description": "  Starting date"}, {"type": "Date", "name": "finish", "description": "  Finishing date"}], "public": ""}, "addDays": {"return": {"type": "", "description": "Date Date with days added"}, "description": "Get a new date object with days added", "private": "", "params": [{"type": "Date", "name": "d", "description": "  Date used as basis"}, {"type": "Number", "name": "days", "description": "  Number of days to add"}], "guessedname": "addDays", "guessedtype": "function"}}, "file": "dp-timeline-util.js", "guessedtype": "property", "shortname": "DP.TimelineUtil", "name": "DP.TimelineUtil"}, "DP.TimelineEvent": {"name": "DP.TimelineEvent", "configs": {"slot": {"type": "Number", "description": "Vertical slot to fit this event into, parent will calculate this", "guessedname": "slot", "guessedtype": "property"}, "category": {"type": "String", "description": "Category of the event, used for colouring", "guessedname": "category", "guessedtype": "property"}, "finish": {"type": "Date", "description": "Ending date of the event (non inclusive)", "guessedname": "finish", "guessedtype": "property"}, "summary": {"type": "String", "description": "Title of the event", "guessedname": "summary", "guessedtype": "property"}, "start": {"type": "Date", "description": "Starting date of the event (inclusive)", "guessedname": "start", "guessedtype": "property"}, "duration": {"type": "Number", "description": "Duration (in days) of the event", "guessedname": "duration", "guessedtype": "property"}}, "constructors": [{"description": "Y.Widget Lifecycle : Initializer"}], "namespace": "", "module": "gallery-dp-timeline", "events": {"finishChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "finishChange", "description": "Fires when the value for the configuration attribute 'finish' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "durationChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "durationChange", "description": "Fires when the value for the configuration attribute 'duration' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "summaryChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "summaryChange", "description": "Fires when the value for the configuration attribute 'summary' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "slotChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "slotChange", "description": "Fires when the value for the configuration attribute 'slot' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "categoryChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "categoryChange", "description": "Fires when the value for the configuration attribute 'category' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "startChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "startChange", "description": "Fires when the value for the configuration attribute 'start' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}}, "guessedname": "TimelineEvent", "methods": {"syncUI": {"protected": "", "description": "Synchronizes the DOM state with the attribute settings", "guessedname": "syncUI", "guessedtype": "function"}, "destructor": {"protected": "", "description": "Destructor lifecycle implementation for the dp-timeline-event class.", "guessedname": "destructor", "guessedtype": "function"}, "_afterDateChange": {"private": "", "description": "Recalculate duration and width after date changes", "guessedname": "_afterDateChange", "guessedtype": "function"}, "_afterSlotChange": {"private": "", "description": "Reset the Y position when the slot attribute changes", "guessedname": "_afterSlotChange", "guessedtype": "function"}, "bindUI": {"protected": "", "description": "Y.Widget Lifecycle", "guessedname": "bindUI", "guessedtype": "function"}, "initializer": {"protected": "", "params": [{"type": "Object", "name": "config", "description": "  Configuration object"}], "description": "Y.Widget Lifecycle : Initializer", "guessedname": "initializer", "guessedtype": "function"}, "renderUI": {"protected": "", "description": "Create the DOM structure for the dp-timeline-event.", "guessedname": "renderUI", "guessedtype": "function"}}, "extends": "Widget", "superclass": "Widget", "file": "dp-timeline-event.js", "guessedtype": "property", "shortname": "DP.TimelineEvent", "properties": {"CONTENT_TEMPLATE": {"protected": "", "description": "Content Template", "guessedname": "CONTENT_TEMPLATE", "guessedtype": "property"}, "BOUNDING_TEMPLATE": {"protected": "", "description": "Bounding Template", "guessedname": "BOUNDING_TEMPLATE", "guessedtype": "property"}, "HTML_PARSER": {"description": "Static Object hash used to capture existing markup for progressive\nenhancement.  Keys correspond to config attribute names and values\nare selectors used to inspect the contentBox for an existing node\nstructure.", "protected": "", "static": "", "guessedname": "HTML_PARSER", "guessedtype": "property", "type": "Object"}, "NAME": {"type": "String", "static": "", "description": "Required NAME static field, to identify the Widget class and \nused as an event prefix, to generate class names etc. (set to the \nclass name in camel case).", "guessedname": "NAME", "guessedtype": "property"}, "ATTRS": {"description": "Static property used to define the default attribute configuration of\nthe Widget.", "protected": "", "static": "", "guessedname": "ATTRS", "guessedtype": "property", "type": "Object"}}, "description": "Timeline event represents a single event on a Y.DP.Timeline"}}, "version": "1.0.0", "modules": {"gallery-dp-timeline": {"description": "The timeline module produces a graphical representation of a timeline with events marked on the timeline\nSimilar to a gantt-chart but more generic.", "submodules": [], "classlist": ["DP.TimelineEvent", "DP.TimelineUtil", "DP.Timeline"], "filelist": ["dp-timeline-event.js", "dp-timeline-util.js", "dp-timeline.js"], "subdata": {}, "name": "gallery-dp-timeline"}}, "filemap": {"dp-timeline.js": {"classlist": ["DP.Timeline"], "name": "dp-timeline.js", "module": "gallery-dp-timeline"}, "dp-timeline-event.js": {"classlist": ["DP.TimelineEvent"], "name": "dp-timeline-event.js", "module": "gallery-dp-timeline"}, "dp-timeline-util.js": {"classlist": ["DP.TimelineUtil"], "name": "dp-timeline-util.js", "module": "gallery-dp-timeline"}}}