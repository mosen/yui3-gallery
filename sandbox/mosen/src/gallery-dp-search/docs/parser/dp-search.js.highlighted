<div class="highlight"><pre>	
<span class="cm">/**</span>
<span class="cm"> * Search widget</span>
<span class="cm"> * </span>
<span class="cm"> * @module dp-search</span>
<span class="cm"> * @requires widget</span>
<span class="cm"> */</span>
<span class="kd">var</span> <span class="nx">Lang</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Lang</span><span class="p">,</span>
    <span class="nx">Node</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Node</span><span class="p">;</span>

<span class="cm">/**</span>
<span class="cm"> * Search widget which allows keyword searching and a specified search field.</span>
<span class="cm"> * </span>
<span class="cm"> * @class Y.DP.Search</span>
<span class="cm"> * @extends Y.Widget</span>
<span class="cm"> */</span>
<span class="nx">Y</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s1">&#39;DP&#39;</span><span class="p">).</span><span class="nx">Search</span> <span class="o">=</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Base</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="s1">&#39;dp-search&#39;</span><span class="p">,</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">Widget</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span>

        <span class="c1">// @see Y.Base.initializer</span>
        <span class="nx">initializer</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">config</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:init&#39;</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;queryUpdate&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">defaultFn</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">_defQueryUpdateFn</span><span class="p">});</span>
        <span class="p">},</span>

        <span class="c1">// @see Y.Base.destructor</span>
        <span class="nx">destructor</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            
        <span class="p">},</span>

        <span class="c1">// @see Y.Widget.renderUI</span>
        <span class="nx">renderUI</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">contentBox</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;contentBox&#39;</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_renderInput</span><span class="p">(</span><span class="nx">contentBox</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_renderFieldSelector</span><span class="p">(</span><span class="nx">contentBox</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_renderButtons</span><span class="p">(</span><span class="nx">contentBox</span><span class="p">);</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Render the input node for the search terms</span>
<span class="cm">         * </span>
<span class="cm">         * @method _renderInput</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_renderInput</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">contentBox</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">))</span> <span class="p">{</span>
                        <span class="kd">var</span> <span class="nx">inputNode</span> <span class="o">=</span> <span class="nx">Node</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substitute</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEMPLATE_INPUT</span><span class="p">,</span> <span class="p">{</span> <span class="nx">className</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="p">)</span> <span class="p">}));</span>
                        <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">,</span> <span class="nx">inputNode</span><span class="p">);</span>

                        <span class="nx">contentBox</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">inputNode</span><span class="p">);</span>
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="nx">_renderFieldSelector</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Render the search and reset buttons</span>
<span class="cm">         */</span>
        <span class="nx">_renderButtons</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">contentBox</span><span class="p">)</span> <span class="p">{</span>

                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;searchButtonNode&#39;</span><span class="p">))</span> <span class="p">{</span>

                    <span class="kd">var</span> <span class="nx">submitBtn</span> <span class="o">=</span> <span class="nx">Node</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substitute</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEMPLATE_BUTTON</span><span class="p">,</span> <span class="p">{</span> 
                        <span class="nx">className</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">),</span> <span class="nx">value</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;strings.submitLabel&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="p">));</span>
                    <span class="nx">contentBox</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">submitBtn</span><span class="p">);</span>

                    <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;searchButtonNode&#39;</span><span class="p">,</span> <span class="nx">submitBtn</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;resetButtonNode&#39;</span><span class="p">))</span> <span class="p">{</span>
                    <span class="kd">var</span> <span class="nx">resetBtn</span> <span class="o">=</span> <span class="nx">Node</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substitute</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEMPLATE_BUTTON</span><span class="p">,</span> <span class="p">{</span> 
                        <span class="nx">className</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;reset&#39;</span><span class="p">),</span> <span class="nx">value</span> <span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;strings.resetLabel&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="p">));</span>
                    <span class="nx">contentBox</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">resetBtn</span><span class="p">);</span>

                    <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;resetButtonNode&#39;</span><span class="p">,</span> <span class="nx">resetBtn</span><span class="p">);</span>
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="c1">// @see Y.Widget.bindUI</span>
        <span class="nx">bindUI</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;focus&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_handleInputFocus</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;blur&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_handleInputBlur</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>

                <span class="kd">var</span> <span class="nx">keyEventSpec</span> <span class="o">=</span> <span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">.</span><span class="nx">UA</span><span class="p">.</span><span class="nx">opera</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;down:&quot;</span> <span class="o">:</span> <span class="s2">&quot;press:&quot;</span><span class="p">;</span>
                <span class="nx">keyEventSpec</span> <span class="o">+=</span> <span class="s2">&quot;13&quot;</span><span class="p">;</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_handleInputEnterKey</span><span class="p">,</span> <span class="nx">keyEventSpec</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;keypress&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_handleInputKeyPress</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>

                <span class="nx">Y</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="s1">&#39;.yui3-dp-search-reset&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_handleResetClick</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span> <span class="c1">// Reset sets value to blank</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="s1">&#39;.yui3-dp-search-submit&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetValue</span><span class="p">(),</span> <span class="k">this</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="s1">&#39;valueChange&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_afterValueChange</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="s1">&#39;fieldChange&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_afterFieldChange</span><span class="p">);</span>
        <span class="p">},</span>

        <span class="c1">// @see Y.Widget.syncUI</span>
        <span class="nx">syncUI</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetValue</span><span class="p">();</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * State of the search tip</span>
<span class="cm">         * </span>
<span class="cm">         * @attribute _tipShown</span>
<span class="cm">         * @type Boolean</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_tipShown</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>

        <span class="cm">/**</span>
<span class="cm">         * Show the search text tip</span>
<span class="cm">         * </span>
<span class="cm">         * @method showTip</span>
<span class="cm">         * @public</span>
<span class="cm">         */</span>
        <span class="nx">showTip</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="p">,</span> <span class="s1">&#39;tip&#39;</span><span class="p">));</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;strings.tip&#39;</span><span class="p">));</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_tipShown</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Hide the search text tip</span>
<span class="cm">         * </span>
<span class="cm">         * @method hideTip</span>
<span class="cm">         * @public</span>
<span class="cm">         */</span>
        <span class="nx">hideTip</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassName</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="p">,</span> <span class="s1">&#39;tip&#39;</span><span class="p">));</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_tipShown</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle input got focus</span>
<span class="cm">         * </span>
<span class="cm">         * @method _handleInputFocus</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_handleInputFocus</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_tipShown</span><span class="p">)</span> <span class="p">{</span>
                        <span class="k">this</span><span class="p">.</span><span class="nx">hideTip</span><span class="p">();</span>
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle input got blur event</span>
<span class="cm">         * </span>
<span class="cm">         * @method _handleInputBlur</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_handleInputBlur</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_handleInputBlur&#39;</span><span class="p">);</span>

                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_tipShown</span> <span class="o">===</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">));</span>
                    <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetValue</span><span class="p">();</span>
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle input got enter key event</span>
<span class="cm">         * </span>
<span class="cm">         * @method _handleInputEnterKey</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_handleInputEnterKey</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_handleInputKey&#39;</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">));</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">blur</span><span class="p">();</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle input got keypress (any key)</span>
<span class="cm">         */</span>
        <span class="nx">_handleInputKeyPress</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_handleInputKeyPress&#39;</span><span class="p">);</span>

                <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentTimeoutID</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">_currentTimeoutID</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentTimeoutID</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">_currentTimeoutID</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTimeoutElapsed</span><span class="p">,</span> <span class="k">this</span><span class="p">),</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;timeout&#39;</span><span class="p">));</span>
        <span class="p">},</span>

        <span class="nx">_handleTimeoutElapsed</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>

            <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_handleTimeoutElapsed&#39;</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">));</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle click on reset.</span>
<span class="cm">         * </span>
<span class="cm">         * @method _handleResetClick</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_handleResetClick</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle search value changed</span>
<span class="cm">         * </span>
<span class="cm">         * @method _afterValueChange</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_afterValueChange</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_afterValueChange&#39;</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetValue</span><span class="p">();</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s1">&#39;queryUpdate&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">parameters</span><span class="o">:</span> <span class="p">{</span> 
                        <span class="nx">q</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">)</span> <span class="c1">// the query string (keywords)</span>
                <span class="p">}});</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Handle search field changed</span>
<span class="cm">         * </span>
<span class="cm">         * @method_afterFieldChange</span>
<span class="cm">         * @protected</span>
<span class="cm">         */</span>
        <span class="nx">_afterFieldChange</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_afterFieldChange&#39;</span><span class="p">);</span>

                <span class="k">this</span><span class="p">.</span><span class="nx">_uiSetField</span><span class="p">();</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Set the UI to reflect the &#39;value&#39; attribute.</span>
<span class="cm">         * </span>
<span class="cm">         * @method _uiSetValue</span>
<span class="cm">         */</span>
        <span class="nx">_uiSetValue</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">);</span>

                <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;&#39;</span> <span class="o">===</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:Showing search tip&#39;</span><span class="p">);</span>
                        <span class="k">this</span><span class="p">.</span><span class="nx">showTip</span><span class="p">();</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                        <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;inputNode&#39;</span><span class="p">).</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">value</span><span class="p">);</span>				
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Set the UI to reflect the &#39;field&#39; attribute.</span>
<span class="cm">         */</span>
        <span class="nx">_uiSetField</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="c1">//var field = this.get(&#39;field&#39;);</span>

        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * Default handler for queryUpdate : do nothing.</span>
<span class="cm">         */</span>
        <span class="nx">_defQueryUpdateFn</span> <span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="nx">Y</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;gallery-dp-search:_defParameterChangeFn&#39;</span><span class="p">);</span>
        <span class="p">},</span>

        <span class="cm">/**</span>
<span class="cm">         * HTML Fragment for the keyword input box</span>
<span class="cm">         * </span>
<span class="cm">         * @property TEMPLATE_INPUT</span>
<span class="cm">         * @type String</span>
<span class="cm">         */</span>
        <span class="nx">TEMPLATE_INPUT</span> <span class="o">:</span> <span class="s1">&#39;&lt;input type=&quot;text&quot; class=&quot;{className}&quot; value=&quot;&quot;&gt;&#39;</span><span class="p">,</span>

        <span class="cm">/**</span>
<span class="cm">         * HTML Fragment for the search and reset buttons</span>
<span class="cm">         * </span>
<span class="cm">         * @property TEMPLATE_BUTTON</span>
<span class="cm">         * @type String</span>
<span class="cm">         */</span>
        <span class="nx">TEMPLATE_BUTTON</span> <span class="o">:</span> <span class="s1">&#39;&lt;input type=&quot;button&quot; class=&quot;{className}&quot; value=&quot;{value}&quot;&gt;&#39;</span>

<span class="p">},</span> <span class="p">{</span>
        <span class="cm">/**</span>
<span class="cm">         * Holds a reference to the current keypress timeout. Used for searching automatically after an elapsed period.</span>
<span class="cm">         * </span>
<span class="cm">         * @property _currentTimeoutID</span>
<span class="cm">         * @type Integer</span>
<span class="cm">         * @private</span>
<span class="cm">         */</span> 
        <span class="nx">_currentTimeoutID</span> <span class="o">:</span> <span class="kc">null</span><span class="p">,</span>

        <span class="nx">HTML_PARSER</span> <span class="o">:</span> <span class="p">{</span>
                <span class="nx">contentBox</span> <span class="o">:</span> <span class="s1">&#39;.yui3-dp-search&#39;</span><span class="p">,</span>
                <span class="nx">inputNode</span> <span class="o">:</span> <span class="s1">&#39;.yui3-dp-search-input&#39;</span><span class="p">,</span>
                <span class="nx">inputWrapper</span> <span class="o">:</span> <span class="s1">&#39;.yui3-dp-search-input-wrapper&#39;</span><span class="p">,</span>
                <span class="nx">resetButtonNode</span> <span class="o">:</span> <span class="s1">&#39;.yui3-dp-search-reset&#39;</span><span class="p">,</span>
                <span class="nx">searchButtonNode</span> <span class="o">:</span> <span class="s1">&#39;.yui3-dp-search-submit&#39;</span><span class="p">,</span>
                <span class="nx">value</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">srcNode</span><span class="p">)</span> <span class="p">{</span>
                        <span class="kd">var</span> <span class="nx">input</span> <span class="o">=</span> <span class="nx">srcNode</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="s1">&#39;.yui3-dp-search-input&#39;</span><span class="p">);</span>
                        <span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">)</span> <span class="p">{</span>
                                <span class="k">return</span> <span class="nx">input</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">);</span>
                        <span class="p">}</span>
                <span class="p">}</span>
        <span class="p">},</span>

        <span class="nx">ATTRS</span> <span class="o">:</span> <span class="p">{</span>
                <span class="cm">/**</span>
<span class="cm">                 * Node reference to the INPUT which holds the search term.</span>
<span class="cm">                 * </span>
<span class="cm">                 * @attribute inputNode</span>
<span class="cm">                 * @type Node</span>
<span class="cm">                 */</span>
                <span class="nx">inputNode</span> <span class="o">:</span> <span class="p">{},</span>

                <span class="cm">/**</span>
<span class="cm">                 * Node reference to the wrapper around the input and pulldown elements.</span>
<span class="cm">                 * </span>
<span class="cm">                 * @attribute inputWrapper</span>
<span class="cm">                 * @type Node</span>
<span class="cm">                 */</span>
                <span class="nx">inputWrapper</span> <span class="o">:</span> <span class="p">{},</span>

                <span class="cm">/**</span>
<span class="cm">                 * Node reference to the reset search terms button</span>
<span class="cm">                 * @attribute resetButtonNode</span>
<span class="cm">                 * @type Node</span>
<span class="cm">                 */</span>
                <span class="nx">resetButtonNode</span> <span class="o">:</span> <span class="p">{},</span>

                <span class="cm">/**</span>
<span class="cm">                 * Node reference to the search submit button</span>
<span class="cm">                 * @attribute searchButtonNode</span>
<span class="cm">                 * @type Node</span>
<span class="cm">                 */</span>
                <span class="nx">searchButtonNode</span> <span class="o">:</span> <span class="p">{},</span>

                <span class="cm">/**</span>
<span class="cm">                 * Timeout in milliseconds for search to submit the current terms</span>
<span class="cm">                 * </span>
<span class="cm">                 * Submits the current search terms if the timeout specified has elapsed.</span>
<span class="cm">                 * @attribute timeout</span>
<span class="cm">                 * @type Integer</span>
<span class="cm">                 */</span>
                <span class="nx">timeout</span> <span class="o">:</span> <span class="p">{</span>
                        <span class="nx">value</span> <span class="o">:</span> <span class="mi">150</span><span class="p">,</span>
                        <span class="nx">validator</span> <span class="o">:</span> <span class="nx">Lang</span><span class="p">.</span><span class="nx">isNumber</span>
                <span class="p">},</span>

                <span class="cm">/**</span>
<span class="cm">                 * The field to search</span>
<span class="cm">                 * </span>
<span class="cm">                 * @attribute field</span>
<span class="cm">                 * @type String</span>
<span class="cm">                 */</span>
                <span class="nx">field</span> <span class="o">:</span> <span class="p">{</span>
                        <span class="nx">value</span> <span class="o">:</span> <span class="kc">null</span>
                <span class="p">},</span>

                <span class="cm">/**</span>
<span class="cm">                 * The search keyword(s). changing this fires a queryUpdate event.</span>
<span class="cm">                 * </span>
<span class="cm">                 * @attribute value</span>
<span class="cm">                 * @type String</span>
<span class="cm">                 */</span>
                <span class="nx">value</span> <span class="o">:</span> <span class="p">{</span>
                        <span class="nx">value</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
                        <span class="nx">validator</span> <span class="o">:</span> <span class="nx">Lang</span><span class="p">.</span><span class="nx">isString</span>
                <span class="p">},</span>

                <span class="cm">/**</span>
<span class="cm">                 * Strings that can be used with internationalisation.</span>
<span class="cm">                 * </span>
<span class="cm">                 * @attribute strings</span>
<span class="cm">                 * @type Object</span>
<span class="cm">                 */</span>
                <span class="nx">strings</span> <span class="o">:</span> <span class="p">{</span>
                        <span class="nx">value</span> <span class="o">:</span> <span class="p">{</span>
                                <span class="nx">tip</span><span class="o">:</span> <span class="s2">&quot;Enter text to search&quot;</span><span class="p">,</span>
                                <span class="nx">submitLabel</span><span class="o">:</span> <span class="s2">&quot;search&quot;</span><span class="p">,</span>
                                <span class="nx">resetLabel</span><span class="o">:</span> <span class="s2">&quot;reset&quot;</span>
                        <span class="p">}</span>
                <span class="p">}</span>
        <span class="p">}</span>
<span class="p">});</span>
</pre></div>
